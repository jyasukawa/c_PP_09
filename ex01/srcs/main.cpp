#include "RPN.hpp"

int	main(int argc, char **argv)
{
	if (argc != 2)
	{
		std::cout << "Usage: ./RPN <inverted Polish mathematical expression>" << std::endl;
		return (1);
	}

	RPN	rpn;

	try
	{
		rpn.ft_execute(argv[1]);
	}
	catch (std::exception &e)
	{
		std::cout << e.what() << std::endl;
	}

	return (0);
}

// 逆ポーランド記法（Reverse Polish Notation, RPN）は、数学の数式を表現するための記法の一つです。通常の中置記法（Infix Notation）の代わりに使用されます。逆ポーランド記法では、演算子が対応する二項演算子の後に現れ、オペランドは演算子の前に置かれます。これにより、括弧や優先順位の問題がなく、計算を単純にスタックを用いて実行できます。

// 例えば、中置記法での式 "3 + 4 * 5" を逆ポーランド記法に変換すると "3 4 5 * +" となります。この式を計算する手順は以下の通りです：

// 1.スタックに3をプッシュする。
// 2.スタックに4をプッシュする。
// 3.スタックに5をプッシュする。
// 4."*" 演算子を適用して、スタックのトップの2つの要素（4と5）をポップし、その結果（20）をスタックにプッシュする。
// 5."+" 演算子を適用して、スタックのトップの2つの要素（3と20）をポップし、その結果（23）をスタックにプッシュする。
// 最終的に、スタックに残った要素が計算結果です。逆ポーランド記法は、計算機の逆ポーランド記法モードや一部の電卓で使われています。

//  （2 4 - は -4 + 2のイメージ）
